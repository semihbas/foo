export function groupBy<T>(
  arr: T[],
  fn: (item: T) => any,
  sortFns?: ((a: T, b: T) => number)[]
) {
  return arr.reduce<Record<string, T[]>>((prev, curr) => {
    const groupKey = fn(curr);
    const group = prev[groupKey] || [];
    group.push(curr);

    if (sortFns) {
      group.sort((a, b) => {
        for (const sortFn of sortFns) {
          const result = sortFn(a, b);
          if (result !== 0) {
            return result;
          }
        }
        return 0;
      });
    }

    return { ...prev, [groupKey]: group };
  }, {});
}
